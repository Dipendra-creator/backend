{"version":3,"sources":["Components/Person.jsx","services/person.jsx","App.js","index.js"],"names":["Person","person","onDelete","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","request","delete","console","log","put","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","showAll","setShowAll","filterName","setFilterName","personsNames","map","setErrorMessage","setNotificationMessage","indexOf","useEffect","personService","catch","error","setTimeout","personToShow","filter","toLowerCase","includes","Persons","personToDelete","window","confirm","onFocus","onBlur","value","onChange","event","target","onSubmit","preventDefault","newPerson","existingPerson","find","updatedPerson","newPersonWithId","concat","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6399a65.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = ({ person, onDelete }) => {\r\n    return (\r\n        <div>{person.name} {person.number} <button onClick={onDelete}>Delete</button></div>\r\n    )\r\n}\r\n\r\nexport default Person;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    console.log(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (newObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, update }","import Person from './Components/Person'\nimport React, { useState, useEffect } from 'react'\nimport personService from './services/person'\n//TODO: https://react-phonebook-demo.herokuapp.com/api/persons\n// const baseUrl = '/api/persons'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNum, setNewNum] = useState('')\n    const [showAll,  setShowAll] = useState(true)\n    const [filterName, setFilterName] = useState('')\n    let personsNames = persons.map(person => person.name)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [notificationMessage, setNotificationMessage] = useState(null)\n    const check_name = (personsNames.indexOf(newName) in personsNames)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(data => setPersons(data))\n            .catch(error => {\n                setErrorMessage(error.response.data.error)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            })\n    }, [])\n\n    const personToShow = showAll\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n\n    // const addPerson = (event) => {\n    //     event.preventDefault()\n    //     if (!check_name) {\n    //         personsNames.push(newName)\n    //         console.log(personsNames)\n    //         const personObject = {\n    //             id: persons.length + 1,\n    //             name: newName,\n    //             number: newNum\n    //         }\n    //         setPersons(persons.concat(personObject))\n    //         setNewName('')\n    //         setNewNum('')\n    //     }\n    //     else{\n    //         alert(`${newName} is already added to phonebook`)\n    //         setNewName('')\n    //         setNewNum('')\n    //     }\n    // }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const newPerson = {name: newName, number: newNum}\n        const existingPerson = persons.find(person => person.name === newName)\n        if (existingPerson) {\n            if (window.confirm(`${existingPerson.name} is already added to the phonebook, replace the old number with a new one?`)) {\n                personService\n                    .update(newPerson, existingPerson.id).then(updatedPerson => {\n                    setPersons(persons.map(person => person.id !== existingPerson.id ? person : updatedPerson))\n                    setNotificationMessage(\n                        `Updated ${newName}`\n                    )\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 5000)\n                })\n                    .catch(error => {\n                        setErrorMessage(\n                            `Information of ${newName} has already been removed from the server`\n                        )\n                        setTimeout(() => {\n                            setErrorMessage(null)\n                        }, 5000)\n                        setPersons(persons.filter(person => person.id !== existingPerson.id))\n                    })\n            }\n        }\n        else {\n            personService.create(newPerson).then(newPersonWithId => {\n                setPersons(persons.concat(newPersonWithId))\n                setNotificationMessage(\n                    `Added ${newName}`\n                )\n                setTimeout(() => {\n                    setNotificationMessage(null)\n                }, 5000)\n            }).catch(error => {\n                setErrorMessage(error.response.data.error)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            })\n        }\n        setNewName('')\n        setNewNum('')\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNum(event.target.value)\n    }\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilterName(event.target.value)\n    }\n\n    const onDelete = (personToDelete) => {\n        if (window.confirm(`Delete ${personToDelete.name}?`)) {\n            console.log(personToDelete.id)\n            personService\n                .deletePerson(personToDelete.id)\n                .then(\n                    setPersons(persons.filter(person => person.id !== personToDelete.id))\n                )\n                .catch(error => {\n                    setErrorMessage(error.response.data.error)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    function Persons() {\n        return (\n            personToShow.map(person =>\n                <Person key={person.id} person={person} onDelete={() => {onDelete(person)}} />\n            )\n        )\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <div onFocus={() => setShowAll(!showAll)} onBlur={() => setShowAll(!showAll)}>\n                filter shown with: <input value={filterName} onChange={handleFilterChange} />\n            </div>\n            <h2>add a new</h2>\n            <form onSubmit={addPerson}>\n                <div>\n                    name: <input\n                    value={newName}\n                    onChange={handlePersonChange}\n                />\n                </div>\n                <div>\n                    number: <input\n                    value={newNum}\n                    onChange={handleNumberChange}\n                />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n            <h2>Numbers</h2>\n            <Persons />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from \"axios\";\n//TODO: https://react-phonebook-demo.herokuapp.com/api/persons\nconst baseUrl = '/api/persons'\n\naxios.get(baseUrl).then(response => {\n    const persons = response.data\n    console.log(persons)\n    ReactDOM.render(\n        <App persons={persons} />,\n        document.getElementById('root')\n    )\n})"],"sourceRoot":""}