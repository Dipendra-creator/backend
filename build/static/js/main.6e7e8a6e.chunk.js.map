{"version":3,"sources":["Components/Person.jsx","App.js","index.js"],"names":["Person","person","name","number","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","showAll","setShowAll","filterName","setFilterName","personsNames","map","check_name","indexOf","useEffect","console","log","axios","get","then","response","data","length","personToShow","filter","toLowerCase","includes","Persons","id","onFocus","onBlur","value","onChange","event","target","onSubmit","preventDefault","alert","push","personObject","concat","type","ReactDOM","render","document","getElementById"],"mappings":"wJAQeA,EANA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd,OACI,gCAAMA,EAAOC,KAAb,IAAoBD,EAAOE,W,gBCiGpBC,EAhGH,WACR,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA+BN,oBAAS,GAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACIC,EAAeV,EAAQW,KAAI,SAAAhB,GAAM,OAAIA,EAAOC,QAC1CgB,EAAcF,EAAaG,QAAQX,KAAYQ,EAWrDI,qBATa,WACTC,QAAQC,IAAI,UACZC,IACKC,IAdG,gBAeHC,MAAK,SAAAC,GACFL,QAAQC,IAAI,qBACZf,EAAWmB,EAASC,WAGhB,IAChBN,QAAQC,IAAI,SAAUhB,EAAQsB,OAAQ,SAEtC,IAAMC,EAAejB,EACfN,EACAA,EAAQwB,QAAO,SAAA7B,GAAM,OAAIA,EAAOC,KAAK6B,cAAcC,SAASlB,EAAWiB,kBAmC7E,SAASE,IACL,OACIJ,EAAaZ,KAAI,SAAAhB,GAAM,OACnB,cAAC,EAAD,CAAwBA,OAAQA,GAAnBA,EAAOiC,OAKhC,OACI,gCACI,2CACA,sBAAKC,QAAS,kBAAMtB,GAAYD,IAAUwB,OAAQ,kBAAMvB,GAAYD,IAApE,gCACuB,uBAAOyB,MAAOvB,EAAYwB,SAhB9B,SAACC,GACxBxB,EAAcwB,EAAMC,OAAOH,aAiBvB,2CACA,uBAAMI,SAhDI,SAACF,GAEf,GADAA,EAAMG,iBACDxB,EAaDyB,MAAM,GAAD,OAAInC,EAAJ,mCACLC,EAAW,IACXE,EAAU,QAfG,CACbK,EAAa4B,KAAKpC,GAClBa,QAAQC,IAAIN,GACZ,IAAM6B,EAAe,CACjBX,GAAI5B,EAAQsB,OAAS,EACrB1B,KAAMM,EACNL,OAAQO,GAEZH,EAAWD,EAAQwC,OAAOD,IAC1BpC,EAAW,IACXE,EAAU,MAoCV,UACI,yCACU,uBACN0B,MAAO7B,EACP8B,SA3BW,SAACC,GACxB9B,EAAW8B,EAAMC,OAAOH,aA6BhB,2CACY,uBACRA,MAAO3B,EACP4B,SArCW,SAACC,GACxB5B,EAAU4B,EAAMC,OAAOH,aAuCf,8BACI,wBAAQU,KAAK,SAAb,sBAGR,yCACA,cAACd,EAAD,QC1FZV,IAAMC,IAFU,gBAEGC,MAAK,SAAAC,GACpB,IAAMpB,EAAUoB,EAASC,KACzBN,QAAQC,IAAIhB,GACZ0C,IAASC,OACL,cAAC,EAAD,CAAK3C,QAASA,IACd4C,SAASC,eAAe,c","file":"static/js/main.6e7e8a6e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = ({ person }) => {\r\n    return (\r\n        <div>{person.name} {person.number}</div>\r\n    )\r\n}\r\n\r\nexport default Person;","import Person from './Components/Person'\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNum, setNewNum] = useState('')\n    const [showAll,  setShowAll] = useState(true)\n    const [filterName, setFilterName] = useState('')\n    let personsNames = persons.map(person => person.name)\n    const check_name = (personsNames.indexOf(newName) in personsNames)\n\n    const hook = () => {\n        console.log('effect')\n        axios\n            .get(baseUrl)\n            .then(response => {\n                console.log('promise fulfilled')\n                setPersons(response.data)\n            })\n    }\n    useEffect(hook, [])\n    console.log('render', persons.length, 'notes')\n\n    const personToShow = showAll\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        if (!check_name) {\n            personsNames.push(newName)\n            console.log(personsNames)\n            const personObject = {\n                id: persons.length + 1,\n                name: newName,\n                number: newNum\n            }\n            setPersons(persons.concat(personObject))\n            setNewName('')\n            setNewNum('')\n        }\n        else{\n            alert(`${newName} is already added to phonebook`)\n            setNewName('')\n            setNewNum('')\n        }\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNum(event.target.value)\n    }\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilterName(event.target.value)\n    }\n\n    function Persons() {\n        return (\n            personToShow.map(person =>\n                <Person key={person.id} person={person} />\n            )\n        )\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <div onFocus={() => setShowAll(!showAll)} onBlur={() => setShowAll(!showAll)}>\n                filter shown with: <input value={filterName} onChange={handleFilterChange} />\n            </div>\n            <h2>add a new</h2>\n            <form onSubmit={addPerson}>\n                <div>\n                    name: <input\n                    value={newName}\n                    onChange={handlePersonChange}\n                />\n                </div>\n                <div>\n                    number: <input\n                    value={newNum}\n                    onChange={handleNumberChange}\n                />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n            <h2>Numbers</h2>\n            <Persons />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from \"axios\";\nconst baseUrl = '/api/persons'\n\naxios.get(baseUrl).then(response => {\n    const persons = response.data\n    console.log(persons)\n    ReactDOM.render(\n        <App persons={persons} />,\n        document.getElementById('root')\n    )\n})"],"sourceRoot":""}